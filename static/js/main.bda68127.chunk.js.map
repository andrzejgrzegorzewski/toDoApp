{"version":3,"sources":["components/AddTask.js","components/Task.js","components/TaskList.js","components/App.js","serviceWorker.js","index.js"],"names":["AddTask","minDate","Date","toISOString","slice","state","text","checked","date","_this","handleText","e","setState","target","value","handleCheckbox","handleDate","handleClick","_this$state","length","props","add","alert","maxDate","this","react_default","a","createElement","className","type","placeholder","onChange","id","htmlFor","min","max","onClick","Component","Task","_props$task","task","important","active","finishDate","style","color","change","delete","finish","toLocaleString","TaskList","tasks","filter","done","sort","b","toLowerCase","activeTasks","map","components_Task","key","doneTasks","Fragment","fontSize","App","counter","deleteTask","Object","toConsumableArray","changeTaskStatus","Array","from","forEach","getTime","addTask","prevState","concat","basename","process","src_components_AddTask","components_TaskList","Boolean","window","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bda68127.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './AddTask.css';\r\n\r\nclass AddTask extends Component {\r\n\r\n    minDate = new Date().toISOString().slice(0,10);\r\n\r\n    state = { \r\n        text:'',\r\n        checked: false,\r\n        date: this.minDate,\r\n     }     \r\n     \r\n     handleText = (e) => {\r\n         this.setState({\r\n             text: e.target.value,\r\n         })\r\n     }\r\n     \r\n     handleCheckbox = (e) => {\r\n         this.setState({\r\n             checked: e.target.checked,\r\n         })\r\n     }\r\n\r\n     handleDate = (e) => {\r\n         this.setState({\r\n             date: e.target.value,\r\n         })\r\n     }\r\n\r\n     handleClick = () => {\r\n\r\n         const {text, checked, date} = this.state;\r\n\r\n         if(text.length > 2){\r\n         const add = this.props.add(text, date, checked);\r\n        \r\n         if(add){\r\n            this.setState({\r\n                text:'',\r\n                checked: false,\r\n                date: this.minDate,\r\n            })\r\n         }\r\n        } else {\r\n            alert(\"The task name is too short !!!\")\r\n        }\r\n     }\r\n\r\n    render() { \r\n\r\n        let maxDate= this.minDate.slice(0,4) * 1 + 1;\r\n        \r\n        maxDate = \"31.12.\" + maxDate;  //31.12.2020\r\n\r\n        return ( \r\n            <div className=\"form\">\r\n            <h1>toDo App</h1>\r\n            <input type=\"text\" placeholder=\"add task\" value={this.state.text} onChange={this.handleText}/>\r\n            <input type=\"checkbox\" checked={this.state.checked} id=\"important\" onChange={this.handleCheckbox}/>\r\n            <label htmlFor=\"important\">Priority</label>\r\n            <br/>\r\n            <label htmlFor=\"date\" >Until when to do it</label>\r\n            <input type=\"date\" value={this.state.date} onChange={this.handleDate} min={this.minDate} max={maxDate}/>\r\n            <br/>\r\n            <button onClick={this.handleClick}>Add</button>\r\n                \r\n            \r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddTask;","import React from 'react';\r\n\r\nconst Task= (props) => {\r\n\r\n    const style = {\r\n        color: 'red',\r\n    }\r\n    const {id, text, date, important, active, finishDate,} = props.task;\r\n\r\n    if(active){\r\n        return ( \r\n            <div>\r\n                <p>\r\n                    <strong style={important ? style : null}>{text}</strong> - to <span>{date} </span>\r\n                    <button onClick={() => props.change(id)}>It was don</button>\r\n                    <button onClick={() => props.delete(id)}>X</button>\r\n                </p>\r\n            </div>\r\n        );\r\n    } else {\r\n\r\n        const finish = new Date(finishDate).toLocaleString();\r\n        return(\r\n            <div>\r\n                <p>\r\n                    <strong>{text}</strong><em> (do it {date}) </em><br/>\r\n                    - confirmation of implementation: <span>{finish}</span>\r\n\r\n                    <button onClick={() => props.delete(id)}>X</button>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n \r\nexport default Task;","import React from 'react';\r\nimport Task from './Task';\r\n\r\nconst TaskList = props => {\r\n\r\n    const active = props.tasks.filter(task => task.active);\r\n    const done = props.tasks.filter(task => !task.active);\r\n    \r\n    if(done.length >= 2)\r\n    done.sort((a,b) => b.finishDate - a.finishDate);\r\n\r\n    if(active.length >= 2){\r\n        active.sort((a,b) => {\r\n            \r\n            a = a.text.toLowerCase();\r\n            b = b.text.toLowerCase();\r\n\r\n            if(a < b) return -1;\r\n            if(a > b) return 1;\r\n            return 0;\r\n        })\r\n    }\r\n\r\n    const activeTasks = active.map(task => \r\n    <Task \r\n    key={task.id} \r\n    task={task} \r\n    delete={props.delete} \r\n    change={props.change}\r\n    />);\r\n\r\n    const doneTasks = done.map(task => \r\n    <Task \r\n    key={task.id} \r\n    task={task} \r\n    delete={props.delete} \r\n    change={props.change}\r\n    />);\r\n\r\n    return ( \r\n        <>\r\n        <hr/>\r\n        <div className=\"active\">\r\n        <h1>Tasks to do!</h1>\r\n        {activeTasks.length > 0 ? activeTasks:<p>No tasks to do - You are free MAN!</p>}\r\n        </div>\r\n\r\n        <hr/>\r\n\r\n        <div className=\"done\">\r\n        <h3>Tasks completed <em>({doneTasks.length})</em></h3>\r\n        {done.length > 3 && <span style={{fontSize: 10}}>Only 3 objects are displayed !!!</span>}\r\n        {doneTasks.slice(0,3)}\r\n        </div>\r\n        </>\r\n     );\r\n}\r\n \r\nexport default TaskList;","import React, { Component } from 'react';\nimport AddTask from './AddTask';\nimport TaskList from './TaskList';\n\nimport './App.css';\n\nclass App extends Component {\n\n  counter = 6;\n\n  state = {\n\n    tasks: [\n      {\n        id: 0,\n        text: 'Shopping',\n        date: '2019-08-22',\n        important: false,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 1,\n        text: 'Cleaning',\n        date: '2019-08-22',\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 2,\n        text: 'Buying new car',\n        date: '2019-08-22',\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 3,\n        text: 'Spend time with friends.',\n        date: '2019-08-22',\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 4,\n        text: 'Playing with kids.',\n        date: '2019-08-22',\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n      {\n        id: 5,\n        text: 'My first Triathlon',\n        date: '2019-08-22',\n        important: true,\n        active: true,\n        finishDate: null,\n      },\n    ]\n  }\n\n  deleteTask = (id) => {\n    \n    // const tasks = [...this.state.tasks];\n    // const index = tasks.findIndex(task => task.id === id);\n\n    // tasks.splice(index,1);\n\n    // this.setState({\n    //   tasks\n    // })\n    // or delete with filter\n\n\n    let tasks = [...this.state.tasks];\n    tasks = tasks.filter(task => task.id !== id);\n    this.setState({tasks});\n  }\n\n  changeTaskStatus = (id) => {\n    const tasks = Array.from(this.state.tasks);\n\n    tasks.forEach(task => {\n      if(task.id === id){\n      task.active = false;\n      task.finishDate = new Date().getTime();\n      }\n    })\n\n    this.setState({tasks})\n  }\n\n  addTask = (text, date, important) => {\n\n    const task ={\n          id: this.counter,\n          text,\n          date,\n          important,\n          active: true,\n          finishDate: null,\n    }\n\n    this.counter++;\n\n    this.setState(prevState => ({\n      tasks: [...prevState.tasks, task]\n    }))\n\n    return true\n  }\n\n  render() {\n    return (\n      <div className=\"App\" basename={process.env.PUBLIC_URL}>\n        <AddTask add={this.addTask}/>\n        <TaskList tasks={this.state.tasks} delete={this.deleteTask} change={this.changeTaskStatus} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}